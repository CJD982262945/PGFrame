using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace __WWW__ {

	using Newtonsoft.Json;
	using Newtonsoft.Json.Linq;
	using UniRx;

	public class __YYY__Base : __ZZZ__ , I__XXX__View
	{
		public __XXX__ViewModel VM;

		public __XXX__ViewModel __XXX__ {
			get {
				return VM;
			}
		}

		public override ViewModelBase GetViewModel ()
		{
			return VM;
		}

		public override void Initialize (ViewModelBase viewModel)
		{
			if (viewModel != null) {
				VM = (__XXX__ViewModel)viewModel;
				VM.AddHostView (ViewModelBase.DefaultViewBaseKey, this);
			} else {
				if (AutoCreateViewModel && VM == null) {
					CreateViewModel ();
				}
			}

			base.Initialize (VM);
		}

		public override void CreateViewModel ()
		{
			if (UseEmptyViewModel || string.IsNullOrEmpty (ViewModelInitValueJson)) {
				VM = new __XXX__ViewModel ();
			} else {
				VM = JsonConvert.DeserializeObject<__XXX__ViewModel> (ViewModelInitValueJson);
				ViewModelPropertyRef ();
			}
			
			VM.AddHostView (ViewModelBase.DefaultViewBaseKey, this);
		}

		public void ViewModelPropertyRef ()
		{
			/****vm_property_ref****/
		}

		public override void Bind ()
		{
			base.Bind ();
			/****bind_code****/
		}

		public override void AfterBind ()
		{
			base.AfterBind ();
		}

		/****bind_func****/

		/****vm_property_view****/
	}

}